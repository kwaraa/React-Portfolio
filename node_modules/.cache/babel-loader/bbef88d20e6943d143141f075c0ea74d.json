{"ast":null,"code":"import _toConsumableArray from \"/Users/kwara/Desktop/react-portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/kwara/Desktop/react-portfolio/src/components/RadarChart.js\";\n// import React, { useEffect, useRef } from 'react';\n// import Chart from 'chart.js';\n\n// const RadarChart = () => {\n//   const chartRef = useRef(null);\n\n//   useEffect(() => {\n//     const data = {\n//       labels: ['Python', 'Javascript', 'Java', 'HTML', 'CSS'],\n//       datasets: [\n//         {\n//           label: \"Skill level\",\n//           data: [6, 6, 6, 6, 6], // Example data values\n//           backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n//           borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n//           borderWidth: 1,\n//         },\n//       ],\n//     };\n\n//     const options = {\n//       scale: {\n//         pointLabels: {\n//             fontSize: 16,\n//         },\n//         ticks: { \n//             display:false,\n//             beginAtZero: true },\n//       },\n//     };\n\n//     const radarChart = new Chart(chartRef.current, {\n//       type: 'radar',\n//       data: data,\n//       options: options,\n//     });\n\n//     return () => {\n//       radarChart.destroy();\n//     };\n//   }, []);\n\n//   return <canvas ref={chartRef} />;\n// };\n\n// export default RadarChart;\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js';\nvar RadarChart = function RadarChart() {\n  var chartRef = useRef(null);\n  var data = {\n    labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'],\n    datasets: [{\n      data: [4, 3, 5, 2, 4],\n      // Example data values\n      backgroundColor: 'rgba(75, 192, 192, 0.4)',\n      // Example background color\n      borderColor: 'rgba(75, 192, 192, 1)',\n      // Example border color\n      borderWidth: 1\n    }]\n  };\n  var options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    scale: {\n      ticks: {\n        display: false,\n        beginAtZero: true,\n        max: Math.ceil(Math.max.apply(Math, _toConsumableArray(data.datasets[0].data)) / 10) * 10\n      }\n    }\n  };\n  var radarChart = new Chart(chartRef.current, {\n    type: 'radar',\n    data: data,\n    options: options\n  });\n  useEffect(function () {\n    // Register custom plugin to draw hexagon shapes at each tick\n    Chart.pluginService.register({\n      afterDraw: function afterDraw(chart) {\n        var ctx = chart.ctx;\n        var xAxis = chart.scales['x-axis-0'];\n\n        // Calculate radius based on the maximum value in the dataset\n        var maxDataValue = Math.max.apply(Math, _toConsumableArray(chart.data.datasets[0].data));\n        var radius = Math.min(chartRef.current.offsetWidth, chartRef.current.offsetHeight) / 2 * (maxDataValue / chart.options.scales.yAxes[0].ticks.max);\n\n        // Calculate angle increment\n        var angleIncrement = 2 * Math.PI / xAxis.ticks.length;\n\n        // Draw hexagon shapes at each tick\n        xAxis.ticks.forEach(function (label, index) {\n          var angle = index * angleIncrement;\n          var x = chartRef.current.offsetWidth / 2 + Math.cos(angle) * radius;\n          var y = chartRef.current.offsetHeight / 2 + Math.sin(angle) * radius;\n          ctx.beginPath();\n          ctx.moveTo(x + radius * Math.cos(0), y + radius * Math.sin(0));\n          for (var side = 1; side < 6; side++) {\n            var sideAngle = 2 * Math.PI * side / 6;\n            ctx.lineTo(x + radius * Math.cos(sideAngle), y + radius * Math.sin(sideAngle));\n          }\n          ctx.closePath();\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n          ctx.stroke();\n        });\n      }\n    });\n    return function () {\n      radarChart.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 10\n    }\n  });\n};\nexport default RadarChart;","map":{"version":3,"names":["React","useEffect","useRef","Chart","RadarChart","chartRef","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","legend","display","scale","ticks","beginAtZero","max","Math","ceil","apply","_toConsumableArray","radarChart","current","type","pluginService","register","afterDraw","chart","ctx","xAxis","scales","maxDataValue","radius","min","offsetWidth","offsetHeight","yAxes","angleIncrement","PI","length","forEach","label","index","angle","x","cos","y","sin","beginPath","moveTo","side","sideAngle","lineTo","closePath","lineWidth","strokeStyle","stroke","destroy","createElement","ref","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/kwara/Desktop/react-portfolio/src/components/RadarChart.js"],"sourcesContent":["// import React, { useEffect, useRef } from 'react';\n// import Chart from 'chart.js';\n\n// const RadarChart = () => {\n//   const chartRef = useRef(null);\n\n//   useEffect(() => {\n//     const data = {\n//       labels: ['Python', 'Javascript', 'Java', 'HTML', 'CSS'],\n//       datasets: [\n//         {\n//           label: \"Skill level\",\n//           data: [6, 6, 6, 6, 6], // Example data values\n//           backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n//           borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n//           borderWidth: 1,\n//         },\n//       ],\n//     };\n\n//     const options = {\n//       scale: {\n//         pointLabels: {\n//             fontSize: 16,\n//         },\n//         ticks: { \n//             display:false,\n//             beginAtZero: true },\n//       },\n//     };\n\n//     const radarChart = new Chart(chartRef.current, {\n//       type: 'radar',\n//       data: data,\n//       options: options,\n//     });\n\n//     return () => {\n//       radarChart.destroy();\n//     };\n//   }, []);\n\n//   return <canvas ref={chartRef} />;\n// };\n\n// export default RadarChart;\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js';\n\nconst RadarChart = () => {\n  const chartRef = useRef(null);\n\n  const data = {\n    labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'],\n    datasets: [\n      {\n        data: [4, 3, 5, 2, 4], // Example data values\n        backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n        borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    legend: {\n      display: false,\n    },\n    scale: {\n      ticks: {\n        display: false,\n        beginAtZero: true,\n        max: Math.ceil(Math.max(...data.datasets[0].data) / 10) * 10,\n      },\n    },\n  };\n\n  const radarChart = new Chart(chartRef.current, {\n    type: 'radar',\n    data: data,\n    options: options,\n  });\n\n  useEffect(() => {\n    // Register custom plugin to draw hexagon shapes at each tick\n    Chart.pluginService.register({\n      afterDraw: function (chart) {\n        const ctx = chart.ctx;\n        const xAxis = chart.scales['x-axis-0'];\n\n        // Calculate radius based on the maximum value in the dataset\n        const maxDataValue = Math.max(...chart.data.datasets[0].data);\n        const radius = (Math.min(chartRef.current.offsetWidth, chartRef.current.offsetHeight) / 2) * (maxDataValue / chart.options.scales.yAxes[0].ticks.max);\n\n        // Calculate angle increment\n        const angleIncrement = (2 * Math.PI) / xAxis.ticks.length;\n\n        // Draw hexagon shapes at each tick\n        xAxis.ticks.forEach((label, index) => {\n          const angle = index * angleIncrement;\n\n          const x = chartRef.current.offsetWidth / 2 + Math.cos(angle) * radius;\n          const y = chartRef.current.offsetHeight / 2 + Math.sin(angle) * radius;\n\n          ctx.beginPath();\n          ctx.moveTo(x + radius * Math.cos(0), y + radius * Math.sin(0));\n\n          for (let side = 1; side < 6; side++) {\n            const sideAngle = (2 * Math.PI * side) / 6;\n            ctx.lineTo(\n              x + radius * Math.cos(sideAngle),\n              y + radius * Math.sin(sideAngle)\n            );\n          }\n\n          ctx.closePath();\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n          ctx.stroke();\n        });\n      },\n    });\n\n    \n\n    return () => {\n      radarChart.destroy();\n    };\n  }, []);\n\n  return <canvas ref={chartRef} />;\n};\n\nexport default RadarChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}