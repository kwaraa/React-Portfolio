{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/kwara/Desktop/react-portfolio/src/components/RadarChart.js\";\n// import React, { useEffect, useRef } from 'react';\n// import Chart from 'chart.js';\n\n// const RadarChart = () => {\n//   const chartRef = useRef(null);\n\n//   useEffect(() => {\n//     const data = {\n//       labels: ['Python', 'Javascript', 'Java', 'HTML', 'CSS'],\n//       datasets: [\n//         {\n//           label: \"Skill level\",\n//           data: [6, 6, 6, 6, 6], // Example data values\n//           backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n//           borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n//           borderWidth: 1,\n//         },\n//       ],\n//     };\n\n//     const options = {\n//       scale: {\n//         pointLabels: {\n//             fontSize: 16,\n//         },\n//         ticks: { \n//             display:false,\n//             beginAtZero: true },\n//       },\n//     };\n\n//     const radarChart = new Chart(chartRef.current, {\n//       type: 'radar',\n//       data: data,\n//       options: options,\n//     });\n\n//     return () => {\n//       radarChart.destroy();\n//     };\n//   }, []);\n\n//   return <canvas ref={chartRef} />;\n// };\n\n// export default RadarChart;\n\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js';\nvar RadarChart = function RadarChart() {\n  var chartRef = useRef(null);\n  useEffect(function () {\n    // Register custom plugin to draw hexagon shapes at each tick\n    Chart.pluginService.register({\n      afterDraw: function afterDraw(chart) {\n        var ctx = chart.ctx;\n        var xAxis = chart.scales['x-axis-0'];\n\n        // Calculate radius and angle increment\n        var radius = xAxis.getDistanceFromCenterForValue(1);\n        var angleIncrement = 2 * Math.PI / xAxis.ticks.length;\n\n        // Draw hexagon shapes at each tick\n        xAxis.ticks.forEach(function (label, index) {\n          var angle = index * angleIncrement;\n          var x = chart.width / 2 + Math.cos(angle) * radius;\n          var y = chart.height / 2 + Math.sin(angle) * radius;\n          ctx.beginPath();\n          ctx.moveTo(x + radius * Math.cos(0), y + radius * Math.sin(0));\n          for (var side = 1; side < 6; side++) {\n            var sideAngle = 2 * Math.PI * side / 6;\n            ctx.lineTo(x + radius * Math.cos(sideAngle), y + radius * Math.sin(sideAngle));\n          }\n          ctx.closePath();\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n          ctx.stroke();\n        });\n      }\n    });\n    var data = {\n      labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'],\n      datasets: [{\n        data: [4, 3, 5, 2, 4],\n        // Example data values\n        backgroundColor: 'rgba(75, 192, 192, 0.4)',\n        // Example background color\n        borderColor: 'rgba(75, 192, 192, 1)',\n        // Example border color\n        borderWidth: 1\n      }]\n    };\n    var options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scale: {\n        pointLabels: {\n          fontSize: 16 // Adjust the font size as needed\n        },\n\n        ticks: {\n          display: false,\n          beginAtZero: true\n        }\n      }\n    };\n    var radarChart = new Chart(chartRef.current, {\n      type: 'radar',\n      data: data,\n      options: options\n    });\n    return function () {\n      radarChart.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 10\n    }\n  });\n};\nexport default RadarChart;","map":{"version":3,"names":["React","useEffect","useRef","Chart","RadarChart","chartRef","pluginService","register","afterDraw","chart","ctx","xAxis","scales","radius","getDistanceFromCenterForValue","angleIncrement","Math","PI","ticks","length","forEach","label","index","angle","x","width","cos","y","height","sin","beginPath","moveTo","side","sideAngle","lineTo","closePath","lineWidth","strokeStyle","stroke","data","labels","datasets","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","legend","display","scale","pointLabels","fontSize","beginAtZero","radarChart","current","type","destroy","createElement","ref","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/kwara/Desktop/react-portfolio/src/components/RadarChart.js"],"sourcesContent":["// import React, { useEffect, useRef } from 'react';\n// import Chart from 'chart.js';\n\n// const RadarChart = () => {\n//   const chartRef = useRef(null);\n\n//   useEffect(() => {\n//     const data = {\n//       labels: ['Python', 'Javascript', 'Java', 'HTML', 'CSS'],\n//       datasets: [\n//         {\n//           label: \"Skill level\",\n//           data: [6, 6, 6, 6, 6], // Example data values\n//           backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n//           borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n//           borderWidth: 1,\n//         },\n//       ],\n//     };\n\n//     const options = {\n//       scale: {\n//         pointLabels: {\n//             fontSize: 16,\n//         },\n//         ticks: { \n//             display:false,\n//             beginAtZero: true },\n//       },\n//     };\n\n//     const radarChart = new Chart(chartRef.current, {\n//       type: 'radar',\n//       data: data,\n//       options: options,\n//     });\n\n//     return () => {\n//       radarChart.destroy();\n//     };\n//   }, []);\n\n//   return <canvas ref={chartRef} />;\n// };\n\n// export default RadarChart;\n\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js';\n\nconst RadarChart = () => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    // Register custom plugin to draw hexagon shapes at each tick\n    Chart.pluginService.register({\n      afterDraw: function (chart) {\n        const ctx = chart.ctx;\n        const xAxis = chart.scales['x-axis-0'];\n\n        // Calculate radius and angle increment\n        const radius = xAxis.getDistanceFromCenterForValue(1);\n        const angleIncrement = (2 * Math.PI) / xAxis.ticks.length;\n\n        // Draw hexagon shapes at each tick\n        xAxis.ticks.forEach((label, index) => {\n          const angle = index * angleIncrement;\n\n          const x = chart.width / 2 + Math.cos(angle) * radius;\n          const y = chart.height / 2 + Math.sin(angle) * radius;\n\n          ctx.beginPath();\n          ctx.moveTo(x + radius * Math.cos(0), y + radius * Math.sin(0));\n\n          for (let side = 1; side < 6; side++) {\n            const sideAngle = (2 * Math.PI * side) / 6;\n            ctx.lineTo(\n              x + radius * Math.cos(sideAngle),\n              y + radius * Math.sin(sideAngle)\n            );\n          }\n\n          ctx.closePath();\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n          ctx.stroke();\n        });\n      },\n    });\n\n    const data = {\n      labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'],\n      datasets: [\n        {\n          data: [4, 3, 5, 2, 4], // Example data values\n          backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n          borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n          borderWidth: 1,\n        },\n      ],\n    };\n\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n      scale: {\n        pointLabels: {\n          fontSize: 16, // Adjust the font size as needed\n        },\n        ticks: {\n          display: false,\n          beginAtZero: true,\n        },\n      },\n    };\n\n    const radarChart = new Chart(chartRef.current, {\n      type: 'radar',\n      data: data,\n      options: options,\n    });\n\n    return () => {\n      radarChart.destroy();\n    };\n  }, []);\n\n  return <canvas ref={chartRef} />;\n};\n\nexport default RadarChart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}