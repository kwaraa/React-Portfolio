{"ast":null,"code":"import _toConsumableArray from \"/Users/kwara/Desktop/react-portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _this = this,\n  _jsxFileName = \"/Users/kwara/Desktop/react-portfolio/src/components/RadarChart.js\";\n// import React, { useEffect, useRef } from 'react';\n// import Chart from 'chart.js';\n\n// const RadarChart = () => {\n//   const chartRef = useRef(null);\n\n//   useEffect(() => {\n//     const data = {\n//       labels: ['Python', 'Javascript', 'Java', 'HTML', 'CSS'],\n//       datasets: [\n//         {\n//           label: \"Skill level\",\n//           data: [6, 6, 6, 6, 6], // Example data values\n//           backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n//           borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n//           borderWidth: 1,\n//         },\n//       ],\n//     };\n\n//     const options = {\n//       scale: {\n//         pointLabels: {\n//             fontSize: 16,\n//         },\n//         ticks: { \n//             display:false,\n//             beginAtZero: true },\n//       },\n//     };\n\n//     const radarChart = new Chart(chartRef.current, {\n//       type: 'radar',\n//       data: data,\n//       options: options,\n//     });\n\n//     return () => {\n//       radarChart.destroy();\n//     };\n//   }, []);\n\n//   return <canvas ref={chartRef} />;\n// };\n\n// export default RadarChart;\n\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js';\nvar RadarChart = function RadarChart() {\n  var chartRef = useRef(null);\n  useEffect(function () {\n    // Register custom plugin to draw hexagon shapes at each tick\n    Chart.pluginService.register({\n      afterDraw: function afterDraw(chart) {\n        var ctx = chart.ctx;\n        var xAxis = chart.scales['x-axis-0'];\n\n        // Calculate radius based on the maximum value in the dataset\n        var maxDataValue = Math.max.apply(Math, _toConsumableArray(chart.data.datasets[0].data));\n        var radius = Math.min(chartRef.current.offsetWidth, chartRef.current.offsetHeight) / 2 * (maxDataValue / chart.options.scales.y.ticks.max);\n\n        // Calculate angle increment\n        var angleIncrement = 2 * Math.PI / xAxis.getLabels().length;\n\n        // Draw hexagon shapes at each tick\n        xAxis.getLabels().forEach(function (label, index) {\n          var angle = index * angleIncrement;\n          var x = chartRef.current.offsetWidth / 2 + Math.cos(angle) * radius;\n          var y = chartRef.current.offsetHeight / 2 + Math.sin(angle) * radius;\n          ctx.beginPath();\n          ctx.moveTo(x + radius * Math.cos(0), y + radius * Math.sin(0));\n          for (var side = 1; side < 6; side++) {\n            var sideAngle = 2 * Math.PI * side / 6;\n            ctx.lineTo(x + radius * Math.cos(sideAngle), y + radius * Math.sin(sideAngle));\n          }\n          ctx.closePath();\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n          ctx.stroke();\n        });\n      }\n    });\n    var data = {\n      labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'],\n      datasets: [{\n        data: [4, 3, 5, 2, 4],\n        // Example data values\n        backgroundColor: 'rgba(75, 192, 192, 0.4)',\n        // Example background color\n        borderColor: 'rgba(75, 192, 192, 1)',\n        // Example border color\n        borderWidth: 1\n      }]\n    };\n    var options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false\n      },\n      scales: {\n        y: {\n          ticks: {\n            display: false,\n            beginAtZero: true,\n            max: Math.ceil(Math.max.apply(Math, _toConsumableArray(data.datasets[0].data)) / 10) * 10\n          }\n        },\n        r: {\n          angleLines: {\n            display: false\n          }\n        }\n      }\n    };\n    var radarChart = new Chart(chartRef.current, {\n      type: 'radar',\n      data: data,\n      options: options\n    });\n    return function () {\n      radarChart.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 10\n    }\n  });\n};\nexport default RadarChart;","map":{"version":3,"names":["React","useEffect","useRef","Chart","RadarChart","chartRef","pluginService","register","afterDraw","chart","ctx","xAxis","scales","maxDataValue","Math","max","apply","_toConsumableArray","data","datasets","radius","min","current","offsetWidth","offsetHeight","options","y","ticks","angleIncrement","PI","getLabels","length","forEach","label","index","angle","x","cos","sin","beginPath","moveTo","side","sideAngle","lineTo","closePath","lineWidth","strokeStyle","stroke","labels","backgroundColor","borderColor","borderWidth","responsive","maintainAspectRatio","legend","display","beginAtZero","ceil","r","angleLines","radarChart","type","destroy","createElement","ref","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/kwara/Desktop/react-portfolio/src/components/RadarChart.js"],"sourcesContent":["// import React, { useEffect, useRef } from 'react';\n// import Chart from 'chart.js';\n\n// const RadarChart = () => {\n//   const chartRef = useRef(null);\n\n//   useEffect(() => {\n//     const data = {\n//       labels: ['Python', 'Javascript', 'Java', 'HTML', 'CSS'],\n//       datasets: [\n//         {\n//           label: \"Skill level\",\n//           data: [6, 6, 6, 6, 6], // Example data values\n//           backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n//           borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n//           borderWidth: 1,\n//         },\n//       ],\n//     };\n\n//     const options = {\n//       scale: {\n//         pointLabels: {\n//             fontSize: 16,\n//         },\n//         ticks: { \n//             display:false,\n//             beginAtZero: true },\n//       },\n//     };\n\n//     const radarChart = new Chart(chartRef.current, {\n//       type: 'radar',\n//       data: data,\n//       options: options,\n//     });\n\n//     return () => {\n//       radarChart.destroy();\n//     };\n//   }, []);\n\n//   return <canvas ref={chartRef} />;\n// };\n\n// export default RadarChart;\n\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js';\n\nconst RadarChart = () => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    // Register custom plugin to draw hexagon shapes at each tick\n    Chart.pluginService.register({\n      afterDraw: function (chart) {\n        const ctx = chart.ctx;\n        const xAxis = chart.scales['x-axis-0'];\n\n        // Calculate radius based on the maximum value in the dataset\n        const maxDataValue = Math.max(...chart.data.datasets[0].data);\n        const radius = (Math.min(chartRef.current.offsetWidth, chartRef.current.offsetHeight) / 2) * (maxDataValue / chart.options.scales.y.ticks.max);\n\n        // Calculate angle increment\n        const angleIncrement = (2 * Math.PI) / xAxis.getLabels().length;\n\n        // Draw hexagon shapes at each tick\n        xAxis.getLabels().forEach((label, index) => {\n          const angle = index * angleIncrement;\n\n          const x = chartRef.current.offsetWidth / 2 + Math.cos(angle) * radius;\n          const y = chartRef.current.offsetHeight / 2 + Math.sin(angle) * radius;\n\n          ctx.beginPath();\n          ctx.moveTo(x + radius * Math.cos(0), y + radius * Math.sin(0));\n\n          for (let side = 1; side < 6; side++) {\n            const sideAngle = (2 * Math.PI * side) / 6;\n            ctx.lineTo(\n              x + radius * Math.cos(sideAngle),\n              y + radius * Math.sin(sideAngle)\n            );\n          }\n\n          ctx.closePath();\n          ctx.lineWidth = 2;\n          ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n          ctx.stroke();\n        });\n      },\n    });\n\n    const data = {\n      labels: ['Label 1', 'Label 2', 'Label 3', 'Label 4', 'Label 5'],\n      datasets: [\n        {\n          data: [4, 3, 5, 2, 4], // Example data values\n          backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n          borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n          borderWidth: 1,\n        },\n      ],\n    };\n\n    const options = {\n      responsive: true,\n      maintainAspectRatio: false,\n      legend: {\n        display: false,\n      },\n      scales: {\n        y: {\n          ticks: {\n            display: false,\n            beginAtZero: true,\n            max: Math.ceil(Math.max(...data.datasets[0].data) / 10) * 10,\n          },\n        },\n        r: {\n          angleLines: {\n            display: false,\n          },\n        },\n      },\n    };\n\n    const radarChart = new Chart(chartRef.current, {\n      type: 'radar',\n      data: data,\n      options: options,\n    });\n\n    return () => {\n      radarChart.destroy();\n    };\n  }, []);\n\n  return <canvas ref={chartRef} />;\n};\n\nexport default RadarChart;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}