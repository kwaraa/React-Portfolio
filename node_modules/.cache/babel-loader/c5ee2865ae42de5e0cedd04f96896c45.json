{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"/Users/kwara/Desktop/react-portfolio/src/components/RadarChart.js\";\n// import React, { useEffect, useRef } from 'react';\n// import Chart from 'chart.js';\n\n// const RadarChart = () => {\n//   const chartRef = useRef(null);\n\n//   useEffect(() => {\n//     const data = {\n//       labels: ['Python', 'Javascript', 'Java', 'HTML', 'CSS'],\n//       datasets: [\n//         {\n//           label: \"Skill level\",\n//           data: [6, 6, 6, 6, 6], // Example data values\n//           backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n//           borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n//           borderWidth: 1,\n//         },\n//       ],\n//     };\n\n//     const options = {\n//       scale: {\n//         pointLabels: {\n//             fontSize: 16,\n//         },\n//         ticks: { \n//             display:false,\n//             beginAtZero: true },\n//       },\n//     };\n\n//     const radarChart = new Chart(chartRef.current, {\n//       type: 'radar',\n//       data: data,\n//       options: options,\n//     });\n\n//     return () => {\n//       radarChart.destroy();\n//     };\n//   }, []);\n\n//   return <canvas ref={chartRef} />;\n// };\n\n// export default RadarChart;\n\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js';\nvar RadarChart = function RadarChart() {\n  var chartRef = useRef(null);\n  useEffect(function () {\n    var data = {\n      labels: ['Python', 'Javascript', 'Java', 'HTML', 'CSS', 'React', 'Flutter', 'C', 'Jupyter Notebook', 'Microsoft Office'],\n      datasets: [{\n        label: [],\n        data: [5, 4, 4, 4, 4, 4],\n        // Example data values\n        backgroundColor: 'rgba(75, 192, 192, 0.4)',\n        // Example background color\n        borderColor: 'rgba(75, 192, 192, 1)',\n        // Example border color\n        borderWidth: 1,\n        fontSize: 20\n      }]\n    };\n    var options = {\n      scale: {\n        pointLabels: {\n          fontSize: 16\n        },\n        angleLines: {\n          color: 'rgba(55, 55, 190, 1)' // Color of the lines radiating from the center\n        },\n\n        gridLines: {\n          color: 'rgba(44, 55, 200, 1)' // Color of the circular grid lines\n        },\n\n        ticks: {\n          display: false,\n          beginAtZero: true,\n          fontColor: 'rgba(100, 55, 23, 0.5)' // Color of the tick labels\n        }\n      },\n\n      title: {\n        display: true,\n        text: 'Skill level',\n        fontSize: 20\n      }\n    };\n    var radarChart = new Chart(chartRef.current, {\n      type: 'radar',\n      data: data,\n      options: options\n    });\n    return function () {\n      radarChart.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }\n  });\n};\nexport default RadarChart;","map":{"version":3,"names":["React","useEffect","useRef","Chart","RadarChart","chartRef","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","fontSize","options","scale","pointLabels","angleLines","color","gridLines","ticks","display","beginAtZero","fontColor","title","text","radarChart","current","type","destroy","createElement","ref","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/kwara/Desktop/react-portfolio/src/components/RadarChart.js"],"sourcesContent":["// import React, { useEffect, useRef } from 'react';\n// import Chart from 'chart.js';\n\n// const RadarChart = () => {\n//   const chartRef = useRef(null);\n\n//   useEffect(() => {\n//     const data = {\n//       labels: ['Python', 'Javascript', 'Java', 'HTML', 'CSS'],\n//       datasets: [\n//         {\n//           label: \"Skill level\",\n//           data: [6, 6, 6, 6, 6], // Example data values\n//           backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n//           borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n//           borderWidth: 1,\n//         },\n//       ],\n//     };\n\n//     const options = {\n//       scale: {\n//         pointLabels: {\n//             fontSize: 16,\n//         },\n//         ticks: { \n//             display:false,\n//             beginAtZero: true },\n//       },\n//     };\n\n//     const radarChart = new Chart(chartRef.current, {\n//       type: 'radar',\n//       data: data,\n//       options: options,\n//     });\n\n//     return () => {\n//       radarChart.destroy();\n//     };\n//   }, []);\n\n//   return <canvas ref={chartRef} />;\n// };\n\n// export default RadarChart;\n\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js';\n\nconst RadarChart = () => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const data = {\n      labels: ['Python', 'Javascript', 'Java', 'HTML', 'CSS', 'React', 'Flutter', 'C', 'Jupyter Notebook', 'Microsoft Office'],\n      datasets: [\n        {\n          label: [],\n          data: [5,4,4,4,4,4], // Example data values\n          backgroundColor: 'rgba(75, 192, 192, 0.4)', // Example background color\n          borderColor: 'rgba(75, 192, 192, 1)', // Example border color\n          borderWidth: 1,\n          fontSize: 20,\n        },\n      ],\n    };\n\n    const options = {\n      scale: {\n        pointLabels: {\n          fontSize: 16,\n        },\n        angleLines: {\n          color: 'rgba(55, 55, 190, 1)', // Color of the lines radiating from the center\n        },\n        gridLines: {\n          color: 'rgba(44, 55, 200, 1)', // Color of the circular grid lines\n        },\n        ticks: {\n          display: false,\n          beginAtZero: true,\n          fontColor: 'rgba(100, 55, 23, 0.5)', // Color of the tick labels\n        },\n      },\n      title: {\n        display:true,\n        text: 'Skill level',\n        fontSize: 20,\n      }\n    };\n\n    const radarChart = new Chart(chartRef.current, {\n      type: 'radar',\n      data: data,\n      options: options,\n    });\n\n    return () => {\n      radarChart.destroy();\n    };\n  }, []);\n\n  return <canvas ref={chartRef} />;\n};\n\nexport default RadarChart;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,UAAU;AAE5B,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EACvB,IAAMC,QAAQ,GAAGH,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,YAAM;IACd,IAAMK,IAAI,GAAG;MACXC,MAAM,EAAE,CAAC,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,EAAE,kBAAkB,EAAE,kBAAkB,CAAC;MACxHC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,EAAE;QACTH,IAAI,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;QAAE;QACrBI,eAAe,EAAE,yBAAyB;QAAE;QAC5CC,WAAW,EAAE,uBAAuB;QAAE;QACtCC,WAAW,EAAE,CAAC;QACdC,QAAQ,EAAE;MACZ,CAAC;IAEL,CAAC;IAED,IAAMC,OAAO,GAAG;MACdC,KAAK,EAAE;QACLC,WAAW,EAAE;UACXH,QAAQ,EAAE;QACZ,CAAC;QACDI,UAAU,EAAE;UACVC,KAAK,EAAE,sBAAsB,CAAE;QACjC,CAAC;;QACDC,SAAS,EAAE;UACTD,KAAK,EAAE,sBAAsB,CAAE;QACjC,CAAC;;QACDE,KAAK,EAAE;UACLC,OAAO,EAAE,KAAK;UACdC,WAAW,EAAE,IAAI;UACjBC,SAAS,EAAE,wBAAwB,CAAE;QACvC;MACF,CAAC;;MACDC,KAAK,EAAE;QACLH,OAAO,EAAC,IAAI;QACZI,IAAI,EAAE,aAAa;QACnBZ,QAAQ,EAAE;MACZ;IACF,CAAC;IAED,IAAMa,UAAU,GAAG,IAAIvB,KAAK,CAACE,QAAQ,CAACsB,OAAO,EAAE;MAC7CC,IAAI,EAAE,OAAO;MACbtB,IAAI,EAAEA,IAAI;MACVQ,OAAO,EAAEA;IACX,CAAC,CAAC;IAEF,OAAO,YAAM;MACXY,UAAU,CAACG,OAAO,CAAC,CAAC;IACtB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO7B,KAAA,CAAA8B,aAAA;IAAQC,GAAG,EAAE1B,QAAS;IAAA2B,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC;AAClC,CAAC;AAED,eAAelC,UAAU"},"metadata":{},"sourceType":"module"}